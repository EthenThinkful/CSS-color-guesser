import { useEffect, useState } from "react";
import "./App.css";

  //generates a random color to be displayed within the JSX
  const getRandomColor = () => {
    const digits = [
      "0",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "A",
      "B",
      "C",
      "D",
      "E",
      "F",
    ];

    //sets the useState to this color
    const color = new Array(6)
      .fill("")
      .map(() => digits[Math.floor(Math.random() * digits.length)])
      //don't understand why he's multiplying Math.random() by digits.length
      .join("");

    return `#${color}`;
  };

function App() {


  const [color, setColor] = useState("");
  //for the selection(buttons) of answers to choose from
  const [answers, setAnswers] = useState([]);
  const [result, setResult] = useState(undefined);

  function generateColors() {
    const actualColor = getRandomColor();
    setColor(actualColor);
    //sets the useState answers to an array of three generated colors (upon which the user will choose from)
    setAnswers(
      [actualColor, getRandomColor(), getRandomColor()].sort(
        () => 0.5 - Math.random()
      )
    );
  }

    //we'd probably want to change where this is executed if we want the color to change dependent on a button saying "next" 
    function handleNextColor() {
      generateColors()
      setResult(undefined)
    }

  //this is what sets the useState color in the first place (upon each page load)
  useEffect(() => {
    generateColors()
  }, []);

  function handleAnswerClicked(answer) {
    if (answer === color) { //WHEN IS THE COLOR DECLARED?
      setResult(true)
      // generateColors() //we'd probably want to change where this is executed if we want the color to change dependent on a button saying "next" 
    } else {
      setResult(false)
    }
  }

  return (
    
    <div className="App">
      <div className="col">
      <header>
        <h1>Hex-a-color</h1>
        </header>
        {/* displays the random color generated by getRandomColor function above */}
        <div className="guessMe" style={{ background: color }}></div>
        {answers.map((answer) => (
          // the onClick function is what invokes the third useState (result)
          <button className="hey" onClick={() => handleAnswerClicked(answer)} key={answer}>
            {answer}
          </button>
        ))}
        {/* this is one of the final steps that says "if result is true, then we display "Wrong Answer""".*/}
        {result === true ? <div className="correct">Correct!</div> : result === false ? <div className="wrong">Wrong Answer</div> : <div> </div>}
        <button className="hey" onClick={() => handleNextColor()}> Next </button>
      </div>
      
    </div>
  );
}

export default App;
